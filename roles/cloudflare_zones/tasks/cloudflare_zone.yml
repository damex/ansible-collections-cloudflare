---
- name: ensure cloudflare credentials
  ansible.builtin.fail:
    msg: Please make sure that cloudflare_zone account_email and account_api_key or api_token is defined!
  when: (cloudflare_zone_account_email | length and not cloudflare_zone_account_api_key and cloudflare_zone_api_token | length) or
        (not cloudflare_zone_account_email and cloudflare_zone_account_api_key | length and cloudflare_zone_api_token | length) or
        (cloudflare_zone_account_email | length and cloudflare_zone_account_api_key | length and cloudflare_zone_api_token | length)

- name: ensure cloudflare credentials
  ansible.builtin.fail:
    msg: Please make sure that cloudflare_zone account_name is defiend!
  when: not cloudflare_zone_account_name

- name: set cloudflare X-Auth-Email and X-Auth-Key headers
  ansible.builtin.set_fact:
    cloudflare_zone_headers:
      X-Auth-Email: "{{ cloudflare_zone_account_email }}"
      X-Auth-Key: "{{ cloudflare_zone_account_api_key }}"
  when:
    - cloudflare_zone_account_email | length
    - cloudflare_zone_account_api_key | length

- name: set cloudflare Authorization headers
  ansible.builtin.set_fact:
    cloudflare_zone_headers:
      Authorization: Bearer {{ cloudflare_zone_api_token }}
  when: cloudflare_zone_api_token | length

- name: ensure cloudflare facts handler
  command: /bin/true
  notify: ensure cloudflare facts

- meta: flush_handlers

- name: create cloudflare zone {{ cloudflare_zone_name }}
  ansible.builtin.uri:
    url: https://api.cloudflare.com/client/v4/zones
    method: POST
    headers: "{{ cloudflare_zone_headers }}"
    body_format: json
    body:
      name: "{{ cloudflare_zone_name }}"
      account:
        id: "{{ cloudflare_account_ids[cloudflare_zone_account_name] }}"
      jump_start: "{{ cloudflare_zone_jump_start }}"
      type: "{{ cloudflare_zone_type }}"
  when:
    - cloudflare_account_ids[cloudflare_zone_account_name] is defined
    - cloudflare_zone_ids[cloudflare_zone_name] is not defined
  notify: ensure cloudflare facts

- meta: flush_handlers

- name: get cloudflare zone {{ cloudflare_zone_name }} universal ssl info
  ansible.builtin.uri:
    url: https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone_ids[cloudflare_zone_name] }}/ssl/universal/settings
    method: GET
    headers: "{{ cloudflare_zone_headers }}"
    body_format: json
  register: cloudflare_zone_universal_ssl_info

- name: ensure cloudflare zone {{ cloudflare_zone_name }} universal ssl
  ansible.builtin.uri:
    url: https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone_ids[cloudflare_zone_name] }}/ssl/universal/settings
    method: PATCH
    headers: "{{ cloudflare_zone_headers }}"
    body_format: json
    body:
      enabled: "{{ cloudflare_zone_universal_ssl }}"
  changed_when: true
  when:
    - cloudflare_zone_universal_ssl_info.json.result.enabled != cloudflare_zone_universal_ssl
